"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIReceivedDataAtServer_recordSearch = exports.IReceivedDataAtServer_recordSearchSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
var util_1 = require("util");
var Ajv = require("ajv");
exports.ajv = new Ajv({ "allErrors": true, "coerceTypes": false, "format": "fast", "nullable": true, "unicode": true, "uniqueItems": true, "useDefaults": true });
exports.ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));
exports.IReceivedDataAtServer_recordSearchSchema = {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "defaultProperties": [],
    "definitions": {
        "LanguageInApplication": {
            "enum": [
                "English",
                "Japanese"
            ],
            "type": "string"
        },
        "OrderOfRecordArray": {
            "enum": [
                "EarlierFirst",
                "HigherFirst",
                "LaterFirst",
                "LowerFirst"
            ],
            "type": "string"
        },
        "SearchCondition": {
            "defaultProperties": [],
            "properties": {
                "abilityIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "abilityIDsCondition": {
                    "description": "能力カテゴリを用いた記録検索において、And検索を行うかOr検索を行うか",
                    "enum": [
                        "AND",
                        "AllowForOrder",
                        "OR"
                    ],
                    "type": "string"
                },
                "gameSystemEnv": {
                    "defaultProperties": [],
                    "properties": {
                        "gameDifficultyID": {
                            "description": "//#NOTE これによる指定は、targetIDsによるものよりも強い指定となる",
                            "type": "string"
                        },
                        "gameModeID": {
                            "type": "string"
                        },
                        "gameSystemID": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "gameModeID",
                        "gameSystemID"
                    ],
                    "type": "object"
                },
                "groupName": {
                    "type": "string"
                },
                "groupSubName": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/LanguageInApplication"
                },
                "limitOfRecordArray": {
                    "type": "number"
                },
                "orderOfRecordArray": {
                    "$ref": "#/definitions/OrderOfRecordArray"
                },
                "runnerIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "startOfRecordArray": {
                    "type": "number"
                },
                "tagIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "targetIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "gameSystemEnv",
                "groupName",
                "language",
                "orderOfRecordArray"
            ],
            "type": "object"
        }
    },
    "properties": {
        "condition": {
            "items": {
                "$ref": "#/definitions/SearchCondition"
            },
            "type": "array"
        }
    },
    "required": [
        "condition"
    ],
    "type": "object"
};
exports.isIReceivedDataAtServer_recordSearch = exports.ajv.compile(exports.IReceivedDataAtServer_recordSearchSchema);
function validate(value) {
    if (exports.isIReceivedDataAtServer_recordSearch(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isIReceivedDataAtServer_recordSearch.errors.filter(function (e) { return e.keyword !== 'if'; }), { dataVar: 'IReceivedDataAtServer_recordSearch' }) +
            '\n\n' +
            util_1.inspect(value));
    }
}
exports.default = validate;
